ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.Transmit_USART,"ax",%progbits
  19              		.align	1
  20              		.global	Transmit_USART
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	Transmit_USART:
  26              	.LVL0:
  27              	.LFB41:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Brandon Mouser
   4:Src/main.c    ****   * U0962682
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 2


  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** char receivedData;
  59:Src/main.c    **** char receivedNum;
  60:Src/main.c    **** int dataFlag;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PFP */
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* sending char */
  69:Src/main.c    **** void Transmit_USART(char[]);
  70:Src/main.c    **** 
  71:Src/main.c    **** /* toggle LED */
  72:Src/main.c    **** void LED_Toggle(char);
  73:Src/main.c    **** 
  74:Src/main.c    **** /* handler */
  75:Src/main.c    **** void USART3_4_IRQHandler(void);
  76:Src/main.c    **** 
  77:Src/main.c    **** /* LED action */
  78:Src/main.c    **** void Control_LED(char, char);
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** int main(void)
  87:Src/main.c    **** {
  88:Src/main.c    **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 3


  89:Src/main.c    ****   HAL_Init();
  90:Src/main.c    ****   SystemClock_Config();
  91:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
  92:Src/main.c    ****   //RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  93:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
  94:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  95:Src/main.c    **** 
  96:Src/main.c    ****   GPIOB->MODER &= ~((3 << (10 * 2)) | (3 << (11 * 2))); // clear
  97:Src/main.c    ****   GPIOB->MODER |= (2 << (10 * 2)); // PB10 to alternate function 
  98:Src/main.c    ****   GPIOB->MODER |= (2 << (11 * 2)); // PB11 to alternate function 
  99:Src/main.c    ****   GPIOB->AFR[1] |= ((4 <<  8) | (4 <<  12)); // AFRH10 and AFRH11 to AF4
 100:Src/main.c    **** 
 101:Src/main.c    ****   //GPIOB->BRR = 115200; // baud rate
 102:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 103:Src/main.c    **** 
 104:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE; // Transmitter enable 
 105:Src/main.c    ****   USART3->CR1 |= USART_CR1_RE; // Reciever enable
 106:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE; // Enable USART
 107:Src/main.c    ****   //USART3->CR1 |= USART_CR1_RXNEIE; // 
 108:Src/main.c    **** 
 109:Src/main.c    ****   // clear LED
 110:Src/main.c    ****   GPIOC->MODER &= ~(GPIO_MODER_MODER8 | GPIO_MODER_MODER9 | GPIO_MODER_MODER10);
 111:Src/main.c    ****   // set red green blue LED
 112:Src/main.c    ****   GPIOC->MODER |= (1 << (6 * 2)) | (1 << (7 * 2)) | (1 << (9 * 2));
 113:Src/main.c    ****   GPIOC->OTYPER &= ~((1 << 6) | (1 << 7) | (1 << 9)); // clear and both push-pull type
 114:Src/main.c    ****   GPIOC->OSPEEDR &= ~((1 << (6 * 2)) | (1 << (7 * 2)) | (1 << (9 * 2))); // clear and both low spee
 115:Src/main.c    ****   GPIOC->PUPDR &= ~((3 << (6 * 2)) | (3 << (7 * 2)) | (3 << (9 * 2))); // clear and both no pull-up
 116:Src/main.c    **** 
 117:Src/main.c    ****   // //part 1
 118:Src/main.c    ****   //char msg[] = "hello world!\n";
 119:Src/main.c    **** 
 120:Src/main.c    ****   // while(1) {
 121:Src/main.c    ****   //   //Transmit_USART(msg);
 122:Src/main.c    ****   //   //msg = null;
 123:Src/main.c    ****   //       //for (int i = 0; i < 1000000; i++); // simple delay
 124:Src/main.c    ****   //   HAL_Delay(1000);
 125:Src/main.c    **** 
 126:Src/main.c    ****   // }
 127:Src/main.c    **** 
 128:Src/main.c    ****     // part 2
 129:Src/main.c    ****    //char receivedChar;
 130:Src/main.c    **** 
 131:Src/main.c    ****    // while(1){
 132:Src/main.c    ****    //  LED_Toggle(receivedChar);
 133:Src/main.c    ****    //      if (USART3->ISR & USART_ISR_RXNE){
 134:Src/main.c    ****    //          receivedChar = USART3->RDR;// read
 135:Src/main.c    ****    //          LED_Toggle(receivedChar);
 136:Src/main.c    ****    //      }
 137:Src/main.c    ****    //  }
 138:Src/main.c    **** 
 139:Src/main.c    ****    // part 3
 140:Src/main.c    ****     NVIC_EnableIRQ(USART3_4_IRQn);
 141:Src/main.c    ****    dataFlag = 0;
 142:Src/main.c    ****    while(1){
 143:Src/main.c    **** 
 144:Src/main.c    ****     Transmit_USART("CMD?\n");
 145:Src/main.c    ****     HAL_Delay(1000);
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    ****   }
 148:Src/main.c    **** 
 149:Src/main.c    **** }
 150:Src/main.c    **** 
 151:Src/main.c    **** 
 152:Src/main.c    **** /**
 153:Src/main.c    ****  * sending a char 
 154:Src/main.c    **** */
 155:Src/main.c    **** void Transmit_USART(char symbol[])
 156:Src/main.c    **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 157:Src/main.c    ****   int i = 0;
  33              		.loc 1 157 3 view .LVU1
 158:Src/main.c    ****   while(*symbol != '\0') {
  34              		.loc 1 158 3 view .LVU2
 157:Src/main.c    ****   int i = 0;
  35              		.loc 1 157 7 is_stmt 0 view .LVU3
  36 0000 0022     		movs	r2, #0
  37              		.loc 1 158 8 view .LVU4
  38 0002 07E0     		b	.L2
  39              	.LVL1:
  40              	.L3:
 159:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
 160:Src/main.c    ****         // wait until TXE (Transmit Data Register Empty) flag is set
 161:Src/main.c    ****       }
  41              		.loc 1 161 7 is_stmt 1 view .LVU5
 159:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
  42              		.loc 1 159 14 discriminator 1 view .LVU6
 159:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
  43              		.loc 1 159 22 is_stmt 0 discriminator 1 view .LVU7
  44 0004 074B     		ldr	r3, .L7
  45 0006 DB69     		ldr	r3, [r3, #28]
 159:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
  46              		.loc 1 159 14 discriminator 1 view .LVU8
  47 0008 1B06     		lsls	r3, r3, #24
  48 000a FBD5     		bpl	.L3
 162:Src/main.c    ****       USART3->TDR = symbol[i]; // send the character
  49              		.loc 1 162 7 is_stmt 1 view .LVU9
  50              		.loc 1 162 27 is_stmt 0 view .LVU10
  51 000c 815C     		ldrb	r1, [r0, r2]
  52              		.loc 1 162 19 view .LVU11
  53 000e 054B     		ldr	r3, .L7
  54 0010 1985     		strh	r1, [r3, #40]
 163:Src/main.c    ****       i++;
  55              		.loc 1 163 7 is_stmt 1 view .LVU12
  56              		.loc 1 163 8 is_stmt 0 view .LVU13
  57 0012 0132     		adds	r2, r2, #1
  58              	.LVL2:
  59              	.L2:
 158:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
  60              		.loc 1 158 17 is_stmt 1 view .LVU14
 158:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 5


  61              		.loc 1 158 9 is_stmt 0 view .LVU15
  62 0014 0378     		ldrb	r3, [r0]
 158:Src/main.c    ****       while (!(USART3->ISR & USART_ISR_TXE)) {
  63              		.loc 1 158 17 view .LVU16
  64 0016 002B     		cmp	r3, #0
  65 0018 F4D1     		bne	.L3
  66              	.L4:
 164:Src/main.c    ****   }
 165:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TC)) {
 166:Src/main.c    ****         // wait until TC (Transmission Complete) flag is set
 167:Src/main.c    ****   }
  67              		.loc 1 167 3 is_stmt 1 view .LVU17
 165:Src/main.c    ****         // wait until TC (Transmission Complete) flag is set
  68              		.loc 1 165 10 discriminator 1 view .LVU18
 165:Src/main.c    ****         // wait until TC (Transmission Complete) flag is set
  69              		.loc 1 165 18 is_stmt 0 discriminator 1 view .LVU19
  70 001a 024B     		ldr	r3, .L7
  71 001c DB69     		ldr	r3, [r3, #28]
 165:Src/main.c    ****         // wait until TC (Transmission Complete) flag is set
  72              		.loc 1 165 10 discriminator 1 view .LVU20
  73 001e 5B06     		lsls	r3, r3, #25
  74 0020 FBD5     		bpl	.L4
 168:Src/main.c    **** }
  75              		.loc 1 168 1 view .LVU21
  76              		@ sp needed
  77 0022 7047     		bx	lr
  78              	.L8:
  79              		.align	2
  80              	.L7:
  81 0024 00480040 		.word	1073760256
  82              		.cfi_endproc
  83              	.LFE41:
  85              		.section	.rodata.LED_Toggle.str1.4,"aMS",%progbits,1
  86              		.align	2
  87              	.LC0:
  88 0000 496E7661 		.ascii	"Invalid\012\000"
  88      6C69640A 
  88      00
  89              		.section	.text.LED_Toggle,"ax",%progbits
  90              		.align	1
  91              		.global	LED_Toggle
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  96              	LED_Toggle:
  97              	.LVL3:
  98              	.LFB42:
 169:Src/main.c    **** 
 170:Src/main.c    **** /**
 171:Src/main.c    ****  *  depanding od a command to toggle LED  
 172:Src/main.c    ****  */
 173:Src/main.c    **** void LED_Toggle(char command) {
  99              		.loc 1 173 31 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		.loc 1 173 31 is_stmt 0 view .LVU23
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 6


 104 0000 10B5     		push	{r4, lr}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
 174:Src/main.c    ****     switch (command) {
 109              		.loc 1 174 5 is_stmt 1 view .LVU24
 110 0002 6728     		cmp	r0, #103
 111 0004 0DD0     		beq	.L10
 112 0006 7228     		cmp	r0, #114
 113 0008 05D0     		beq	.L11
 114 000a 6228     		cmp	r0, #98
 115 000c 10D0     		beq	.L12
 175:Src/main.c    ****         case 'r':
 176:Src/main.c    ****             GPIOC->ODR ^= (1 << 7); // Toggle red LED connected to PC7
 177:Src/main.c    ****             break;
 178:Src/main.c    ****         case 'g':
 179:Src/main.c    ****             GPIOC->ODR ^= (1 << 8); // Toggle green LED connected to PC8
 180:Src/main.c    ****             break;
 181:Src/main.c    ****         case 'b':
 182:Src/main.c    ****             GPIOC->ODR ^= (1 << 9); // Toggle blue LED connected to PC9
 183:Src/main.c    ****             break;
 184:Src/main.c    ****         default:
 185:Src/main.c    ****             Transmit_USART("Invalid\n");
 116              		.loc 1 185 13 view .LVU25
 117 000e 0C48     		ldr	r0, .L16
 118              	.LVL4:
 119              		.loc 1 185 13 is_stmt 0 view .LVU26
 120 0010 FFF7FEFF 		bl	Transmit_USART
 121              	.LVL5:
 186:Src/main.c    ****             break;
 122              		.loc 1 186 13 is_stmt 1 view .LVU27
 187:Src/main.c    ****     }
 188:Src/main.c    **** }
 123              		.loc 1 188 1 is_stmt 0 view .LVU28
 124 0014 04E0     		b	.L9
 125              	.LVL6:
 126              	.L11:
 176:Src/main.c    ****             break;
 127              		.loc 1 176 13 is_stmt 1 view .LVU29
 176:Src/main.c    ****             break;
 128              		.loc 1 176 18 is_stmt 0 view .LVU30
 129 0016 0B4A     		ldr	r2, .L16+4
 130 0018 5369     		ldr	r3, [r2, #20]
 176:Src/main.c    ****             break;
 131              		.loc 1 176 24 view .LVU31
 132 001a 8021     		movs	r1, #128
 133 001c 4B40     		eors	r3, r1
 134 001e 5361     		str	r3, [r2, #20]
 177:Src/main.c    ****         case 'g':
 135              		.loc 1 177 13 is_stmt 1 view .LVU32
 136              	.LVL7:
 137              	.L9:
 138              		.loc 1 188 1 is_stmt 0 view .LVU33
 139              		@ sp needed
 140 0020 10BD     		pop	{r4, pc}
 141              	.LVL8:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 7


 142              	.L10:
 179:Src/main.c    ****             break;
 143              		.loc 1 179 13 is_stmt 1 view .LVU34
 179:Src/main.c    ****             break;
 144              		.loc 1 179 18 is_stmt 0 view .LVU35
 145 0022 084A     		ldr	r2, .L16+4
 146 0024 5169     		ldr	r1, [r2, #20]
 179:Src/main.c    ****             break;
 147              		.loc 1 179 24 view .LVU36
 148 0026 8023     		movs	r3, #128
 149 0028 5B00     		lsls	r3, r3, #1
 150 002a 4B40     		eors	r3, r1
 151 002c 5361     		str	r3, [r2, #20]
 180:Src/main.c    ****         case 'b':
 152              		.loc 1 180 13 is_stmt 1 view .LVU37
 153 002e F7E7     		b	.L9
 154              	.L12:
 182:Src/main.c    ****             break;
 155              		.loc 1 182 13 view .LVU38
 182:Src/main.c    ****             break;
 156              		.loc 1 182 18 is_stmt 0 view .LVU39
 157 0030 044A     		ldr	r2, .L16+4
 158 0032 5169     		ldr	r1, [r2, #20]
 182:Src/main.c    ****             break;
 159              		.loc 1 182 24 view .LVU40
 160 0034 8023     		movs	r3, #128
 161 0036 9B00     		lsls	r3, r3, #2
 162 0038 4B40     		eors	r3, r1
 163 003a 5361     		str	r3, [r2, #20]
 183:Src/main.c    ****         default:
 164              		.loc 1 183 13 is_stmt 1 view .LVU41
 165 003c F0E7     		b	.L9
 166              	.L17:
 167 003e C046     		.align	2
 168              	.L16:
 169 0040 00000000 		.word	.LC0
 170 0044 00080048 		.word	1207961600
 171              		.cfi_endproc
 172              	.LFE42:
 174              		.section	.rodata.Control_LED.str1.4,"aMS",%progbits,1
 175              		.align	2
 176              	.LC2:
 177 0000 496E7661 		.ascii	"Invalid\000"
 177      6C696400 
 178              		.section	.text.Control_LED,"ax",%progbits
 179              		.align	1
 180              		.global	Control_LED
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 185              	Control_LED:
 186              	.LVL9:
 187              	.LFB44:
 189:Src/main.c    **** 
 190:Src/main.c    **** void USART3_4_IRQHandler(void) {
 191:Src/main.c    ****     //if (USART3->ISR & USART_ISR_RXNE) {}
 192:Src/main.c    ****     if (dataFlag == 0) {
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 8


 193:Src/main.c    ****         receivedData = USART3->RDR;
 194:Src/main.c    ****         dataFlag = 1;
 195:Src/main.c    ****     } else if(dataFlag == 1){
 196:Src/main.c    ****         receivedNum = USART3->RDR;
 197:Src/main.c    ****         dataFlag = 0;
 198:Src/main.c    ****         Control_LED(receivedData, receivedNum);
 199:Src/main.c    ****     }
 200:Src/main.c    **** }
 201:Src/main.c    **** 
 202:Src/main.c    **** void Control_LED(char led, char action){
 188              		.loc 1 202 40 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 202 40 is_stmt 0 view .LVU43
 193 0000 10B5     		push	{r4, lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198 0002 0C00     		movs	r4, r1
 203:Src/main.c    **** 
 204:Src/main.c    ****   switch (led) {
 199              		.loc 1 204 3 is_stmt 1 view .LVU44
 200 0004 6728     		cmp	r0, #103
 201 0006 20D0     		beq	.L19
 202 0008 7228     		cmp	r0, #114
 203 000a 0DD0     		beq	.L20
 204 000c 6228     		cmp	r0, #98
 205 000e 47D1     		bne	.L22
 206              	.LVL10:
 207              	.L21:
 205:Src/main.c    ****      case 'r':
 206:Src/main.c    ****          if (action == '0') GPIOC->ODR &= ~(1 << 6); // OFF
 207:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 208:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 209:Src/main.c    ****          else Transmit_USART("Invalid");
 210:Src/main.c    ****      case 'g':
 211:Src/main.c    ****          if (action == '0') GPIOC->ODR &= ~(1 << 6); // OFF
 212:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 213:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 214:Src/main.c    ****          else Transmit_USART("Invalid");
 215:Src/main.c    ****      case 'b':
 216:Src/main.c    ****          if (action == '0') GPIOC->ODR &= ~(1 << 6); // OFF
 208              		.loc 1 216 10 view .LVU45
 209              		.loc 1 216 13 is_stmt 0 view .LVU46
 210 0010 302C     		cmp	r4, #48
 211 0012 40D0     		beq	.L32
 217:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 212              		.loc 1 217 15 is_stmt 1 view .LVU47
 213              		.loc 1 217 18 is_stmt 0 view .LVU48
 214 0014 312C     		cmp	r4, #49
 215 0016 47D0     		beq	.L33
 218:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 216              		.loc 1 218 15 is_stmt 1 view .LVU49
 217              		.loc 1 218 18 is_stmt 0 view .LVU50
 218 0018 322C     		cmp	r4, #50
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 9


 219 001a 4BD1     		bne	.L31
 220              		.loc 1 218 34 is_stmt 1 discriminator 1 view .LVU51
 221              		.loc 1 218 39 is_stmt 0 discriminator 1 view .LVU52
 222 001c 274A     		ldr	r2, .L38
 223 001e 5369     		ldr	r3, [r2, #20]
 224              		.loc 1 218 45 discriminator 1 view .LVU53
 225 0020 4021     		movs	r1, #64
 226 0022 4B40     		eors	r3, r1
 227 0024 5361     		str	r3, [r2, #20]
 228 0026 3BE0     		b	.L22
 229              	.LVL11:
 230              	.L20:
 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 231              		.loc 1 206 10 is_stmt 1 view .LVU54
 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 232              		.loc 1 206 13 is_stmt 0 view .LVU55
 233 0028 3029     		cmp	r1, #48
 234 002a 09D0     		beq	.L34
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 235              		.loc 1 207 15 is_stmt 1 view .LVU56
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 236              		.loc 1 207 18 is_stmt 0 view .LVU57
 237 002c 3129     		cmp	r1, #49
 238 002e 18D0     		beq	.L35
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 239              		.loc 1 208 15 is_stmt 1 view .LVU58
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 240              		.loc 1 208 18 is_stmt 0 view .LVU59
 241 0030 3229     		cmp	r1, #50
 242 0032 1CD1     		bne	.L25
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 243              		.loc 1 208 34 is_stmt 1 discriminator 1 view .LVU60
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 244              		.loc 1 208 39 is_stmt 0 discriminator 1 view .LVU61
 245 0034 214A     		ldr	r2, .L38
 246 0036 5369     		ldr	r3, [r2, #20]
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 247              		.loc 1 208 45 discriminator 1 view .LVU62
 248 0038 4021     		movs	r1, #64
 249              	.LVL12:
 208:Src/main.c    ****          else Transmit_USART("Invalid");
 250              		.loc 1 208 45 discriminator 1 view .LVU63
 251 003a 4B40     		eors	r3, r1
 252 003c 5361     		str	r3, [r2, #20]
 253 003e 04E0     		b	.L19
 254              	.LVL13:
 255              	.L34:
 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 256              		.loc 1 206 29 is_stmt 1 discriminator 1 view .LVU64
 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 257              		.loc 1 206 34 is_stmt 0 discriminator 1 view .LVU65
 258 0040 1E4A     		ldr	r2, .L38
 259 0042 5369     		ldr	r3, [r2, #20]
 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 260              		.loc 1 206 40 discriminator 1 view .LVU66
 261 0044 4021     		movs	r1, #64
 262              	.LVL14:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 10


 206:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 263              		.loc 1 206 40 discriminator 1 view .LVU67
 264 0046 8B43     		bics	r3, r1
 265 0048 5361     		str	r3, [r2, #20]
 266              	.LVL15:
 267              	.L19:
 211:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 268              		.loc 1 211 10 is_stmt 1 view .LVU68
 211:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 269              		.loc 1 211 13 is_stmt 0 view .LVU69
 270 004a 302C     		cmp	r4, #48
 271 004c 13D0     		beq	.L36
 212:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 272              		.loc 1 212 15 is_stmt 1 view .LVU70
 212:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 273              		.loc 1 212 18 is_stmt 0 view .LVU71
 274 004e 312C     		cmp	r4, #49
 275 0050 17D0     		beq	.L37
 213:Src/main.c    ****          else Transmit_USART("Invalid");
 276              		.loc 1 213 15 is_stmt 1 view .LVU72
 213:Src/main.c    ****          else Transmit_USART("Invalid");
 277              		.loc 1 213 18 is_stmt 0 view .LVU73
 278 0052 322C     		cmp	r4, #50
 279 0054 1BD1     		bne	.L28
 213:Src/main.c    ****          else Transmit_USART("Invalid");
 280              		.loc 1 213 34 is_stmt 1 discriminator 1 view .LVU74
 213:Src/main.c    ****          else Transmit_USART("Invalid");
 281              		.loc 1 213 39 is_stmt 0 discriminator 1 view .LVU75
 282 0056 194A     		ldr	r2, .L38
 283 0058 5369     		ldr	r3, [r2, #20]
 213:Src/main.c    ****          else Transmit_USART("Invalid");
 284              		.loc 1 213 45 discriminator 1 view .LVU76
 285 005a 4021     		movs	r1, #64
 286 005c 4B40     		eors	r3, r1
 287 005e 5361     		str	r3, [r2, #20]
 288 0060 D6E7     		b	.L21
 289              	.LVL16:
 290              	.L35:
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 291              		.loc 1 207 34 is_stmt 1 discriminator 1 view .LVU77
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 292              		.loc 1 207 39 is_stmt 0 discriminator 1 view .LVU78
 293 0062 164A     		ldr	r2, .L38
 294 0064 5369     		ldr	r3, [r2, #20]
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 295              		.loc 1 207 45 discriminator 1 view .LVU79
 296 0066 4021     		movs	r1, #64
 297              	.LVL17:
 207:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 298              		.loc 1 207 45 discriminator 1 view .LVU80
 299 0068 0B43     		orrs	r3, r1
 300 006a 5361     		str	r3, [r2, #20]
 301 006c EDE7     		b	.L19
 302              	.LVL18:
 303              	.L25:
 209:Src/main.c    ****      case 'g':
 304              		.loc 1 209 15 is_stmt 1 view .LVU81
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 11


 305 006e 1448     		ldr	r0, .L38+4
 306              	.LVL19:
 209:Src/main.c    ****      case 'g':
 307              		.loc 1 209 15 is_stmt 0 view .LVU82
 308 0070 FFF7FEFF 		bl	Transmit_USART
 309              	.LVL20:
 209:Src/main.c    ****      case 'g':
 310              		.loc 1 209 15 view .LVU83
 311 0074 E9E7     		b	.L19
 312              	.L36:
 211:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 313              		.loc 1 211 29 is_stmt 1 discriminator 1 view .LVU84
 211:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 314              		.loc 1 211 34 is_stmt 0 discriminator 1 view .LVU85
 315 0076 114A     		ldr	r2, .L38
 316 0078 5369     		ldr	r3, [r2, #20]
 211:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 317              		.loc 1 211 40 discriminator 1 view .LVU86
 318 007a 4021     		movs	r1, #64
 319 007c 8B43     		bics	r3, r1
 320 007e 5361     		str	r3, [r2, #20]
 321 0080 C6E7     		b	.L21
 322              	.L37:
 212:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 323              		.loc 1 212 34 is_stmt 1 discriminator 1 view .LVU87
 212:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 324              		.loc 1 212 39 is_stmt 0 discriminator 1 view .LVU88
 325 0082 0E4A     		ldr	r2, .L38
 326 0084 5369     		ldr	r3, [r2, #20]
 212:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 327              		.loc 1 212 45 discriminator 1 view .LVU89
 328 0086 4021     		movs	r1, #64
 329 0088 0B43     		orrs	r3, r1
 330 008a 5361     		str	r3, [r2, #20]
 331 008c C0E7     		b	.L21
 332              	.L28:
 214:Src/main.c    ****      case 'b':
 333              		.loc 1 214 15 is_stmt 1 view .LVU90
 334 008e 0C48     		ldr	r0, .L38+4
 335 0090 FFF7FEFF 		bl	Transmit_USART
 336              	.LVL21:
 337 0094 BCE7     		b	.L21
 338              	.L32:
 216:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 339              		.loc 1 216 29 discriminator 1 view .LVU91
 216:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 340              		.loc 1 216 34 is_stmt 0 discriminator 1 view .LVU92
 341 0096 094A     		ldr	r2, .L38
 342 0098 5369     		ldr	r3, [r2, #20]
 216:Src/main.c    ****          else if (action == '1') GPIOC->ODR |= (1 << 6); // ON
 343              		.loc 1 216 40 discriminator 1 view .LVU93
 344 009a 4021     		movs	r1, #64
 345 009c 8B43     		bics	r3, r1
 346 009e 5361     		str	r3, [r2, #20]
 347              	.L22:
 219:Src/main.c    ****          else Transmit_USART("Invalid");
 220:Src/main.c    ****      default:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 12


 221:Src/main.c    ****          Transmit_USART("Invalid");
 348              		.loc 1 221 10 is_stmt 1 view .LVU94
 349 00a0 0748     		ldr	r0, .L38+4
 350 00a2 FFF7FEFF 		bl	Transmit_USART
 351              	.LVL22:
 222:Src/main.c    ****   }
 223:Src/main.c    **** 
 224:Src/main.c    **** 
 225:Src/main.c    **** 
 226:Src/main.c    **** }
 352              		.loc 1 226 1 is_stmt 0 view .LVU95
 353              		@ sp needed
 354              	.LVL23:
 355              		.loc 1 226 1 view .LVU96
 356 00a6 10BD     		pop	{r4, pc}
 357              	.L33:
 217:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 358              		.loc 1 217 34 is_stmt 1 discriminator 1 view .LVU97
 217:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 359              		.loc 1 217 39 is_stmt 0 discriminator 1 view .LVU98
 360 00a8 044A     		ldr	r2, .L38
 361 00aa 5369     		ldr	r3, [r2, #20]
 217:Src/main.c    ****          else if (action == '2') GPIOC->ODR ^= (1 << 6); // TOGGLE
 362              		.loc 1 217 45 discriminator 1 view .LVU99
 363 00ac 4021     		movs	r1, #64
 364 00ae 0B43     		orrs	r3, r1
 365 00b0 5361     		str	r3, [r2, #20]
 366 00b2 F5E7     		b	.L22
 367              	.L31:
 219:Src/main.c    ****          else Transmit_USART("Invalid");
 368              		.loc 1 219 15 is_stmt 1 view .LVU100
 369 00b4 0248     		ldr	r0, .L38+4
 370 00b6 FFF7FEFF 		bl	Transmit_USART
 371              	.LVL24:
 372 00ba F1E7     		b	.L22
 373              	.L39:
 374              		.align	2
 375              	.L38:
 376 00bc 00080048 		.word	1207961600
 377 00c0 00000000 		.word	.LC2
 378              		.cfi_endproc
 379              	.LFE44:
 381              		.section	.text.USART3_4_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	USART3_4_IRQHandler
 384              		.syntax unified
 385              		.code	16
 386              		.thumb_func
 388              	USART3_4_IRQHandler:
 389              	.LFB43:
 190:Src/main.c    ****     //if (USART3->ISR & USART_ISR_RXNE) {}
 390              		.loc 1 190 32 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI2:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 13


 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 192:Src/main.c    ****         receivedData = USART3->RDR;
 399              		.loc 1 192 5 view .LVU102
 192:Src/main.c    ****         receivedData = USART3->RDR;
 400              		.loc 1 192 18 is_stmt 0 view .LVU103
 401 0002 0D4B     		ldr	r3, .L43
 402 0004 1B68     		ldr	r3, [r3]
 192:Src/main.c    ****         receivedData = USART3->RDR;
 403              		.loc 1 192 8 view .LVU104
 404 0006 002B     		cmp	r3, #0
 405 0008 07D1     		bne	.L41
 193:Src/main.c    ****         dataFlag = 1;
 406              		.loc 1 193 9 is_stmt 1 view .LVU105
 193:Src/main.c    ****         dataFlag = 1;
 407              		.loc 1 193 30 is_stmt 0 view .LVU106
 408 000a 0C4B     		ldr	r3, .L43+4
 409 000c 9A8C     		ldrh	r2, [r3, #36]
 193:Src/main.c    ****         dataFlag = 1;
 410              		.loc 1 193 22 view .LVU107
 411 000e 0C4B     		ldr	r3, .L43+8
 412 0010 1A70     		strb	r2, [r3]
 194:Src/main.c    ****     } else if(dataFlag == 1){
 413              		.loc 1 194 9 is_stmt 1 view .LVU108
 194:Src/main.c    ****     } else if(dataFlag == 1){
 414              		.loc 1 194 18 is_stmt 0 view .LVU109
 415 0012 094B     		ldr	r3, .L43
 416 0014 0122     		movs	r2, #1
 417 0016 1A60     		str	r2, [r3]
 418              	.L40:
 200:Src/main.c    **** 
 419              		.loc 1 200 1 view .LVU110
 420              		@ sp needed
 421 0018 10BD     		pop	{r4, pc}
 422              	.L41:
 195:Src/main.c    ****         receivedNum = USART3->RDR;
 423              		.loc 1 195 12 is_stmt 1 view .LVU111
 195:Src/main.c    ****         receivedNum = USART3->RDR;
 424              		.loc 1 195 14 is_stmt 0 view .LVU112
 425 001a 012B     		cmp	r3, #1
 426 001c FCD1     		bne	.L40
 196:Src/main.c    ****         dataFlag = 0;
 427              		.loc 1 196 9 is_stmt 1 view .LVU113
 196:Src/main.c    ****         dataFlag = 0;
 428              		.loc 1 196 29 is_stmt 0 view .LVU114
 429 001e 074B     		ldr	r3, .L43+4
 430 0020 998C     		ldrh	r1, [r3, #36]
 196:Src/main.c    ****         dataFlag = 0;
 431              		.loc 1 196 21 view .LVU115
 432 0022 C9B2     		uxtb	r1, r1
 433 0024 074B     		ldr	r3, .L43+12
 434 0026 1970     		strb	r1, [r3]
 197:Src/main.c    ****         Control_LED(receivedData, receivedNum);
 435              		.loc 1 197 9 is_stmt 1 view .LVU116
 197:Src/main.c    ****         Control_LED(receivedData, receivedNum);
 436              		.loc 1 197 18 is_stmt 0 view .LVU117
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 14


 437 0028 034B     		ldr	r3, .L43
 438 002a 0022     		movs	r2, #0
 439 002c 1A60     		str	r2, [r3]
 198:Src/main.c    ****     }
 440              		.loc 1 198 9 is_stmt 1 view .LVU118
 441 002e 044B     		ldr	r3, .L43+8
 442 0030 1878     		ldrb	r0, [r3]
 443 0032 FFF7FEFF 		bl	Control_LED
 444              	.LVL25:
 200:Src/main.c    **** 
 445              		.loc 1 200 1 is_stmt 0 view .LVU119
 446 0036 EFE7     		b	.L40
 447              	.L44:
 448              		.align	2
 449              	.L43:
 450 0038 00000000 		.word	dataFlag
 451 003c 00480040 		.word	1073760256
 452 0040 00000000 		.word	receivedData
 453 0044 00000000 		.word	receivedNum
 454              		.cfi_endproc
 455              	.LFE43:
 457              		.section	.text._Error_Handler,"ax",%progbits
 458              		.align	1
 459              		.global	_Error_Handler
 460              		.syntax unified
 461              		.code	16
 462              		.thumb_func
 464              	_Error_Handler:
 465              	.LFB46:
 227:Src/main.c    **** 
 228:Src/main.c    **** 
 229:Src/main.c    **** /** System Clock Configuration
 230:Src/main.c    **** */
 231:Src/main.c    **** void SystemClock_Config(void)
 232:Src/main.c    **** {
 233:Src/main.c    **** 
 234:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 235:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 236:Src/main.c    **** 
 237:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 238:Src/main.c    ****     */
 239:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 240:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 241:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 242:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 243:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 246:Src/main.c    ****   }
 247:Src/main.c    **** 
 248:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 249:Src/main.c    ****     */
 250:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 251:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 252:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 253:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 254:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 15


 255:Src/main.c    **** 
 256:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 257:Src/main.c    ****   {
 258:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 259:Src/main.c    ****   }
 260:Src/main.c    **** 
 261:Src/main.c    ****     /**Configure the Systick interrupt time
 262:Src/main.c    ****     */
 263:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 264:Src/main.c    **** 
 265:Src/main.c    ****     /**Configure the Systick
 266:Src/main.c    ****     */
 267:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 270:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 271:Src/main.c    **** }
 272:Src/main.c    **** 
 273:Src/main.c    **** /* USER CODE BEGIN 4 */
 274:Src/main.c    **** 
 275:Src/main.c    **** /* USER CODE END 4 */
 276:Src/main.c    **** 
 277:Src/main.c    **** /**
 278:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 279:Src/main.c    ****   * @param  None
 280:Src/main.c    ****   * @retval None
 281:Src/main.c    ****   */
 282:Src/main.c    **** void _Error_Handler(char * file, int line)
 283:Src/main.c    **** {
 466              		.loc 1 283 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		@ Volatile: function does not return.
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472              	.LVL26:
 473              	.L46:
 284:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 285:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 286:Src/main.c    ****   while(1)
 474              		.loc 1 286 3 view .LVU121
 287:Src/main.c    ****   {
 288:Src/main.c    ****   }
 475              		.loc 1 288 3 view .LVU122
 286:Src/main.c    ****   {
 476              		.loc 1 286 8 view .LVU123
 477 0000 FEE7     		b	.L46
 478              		.cfi_endproc
 479              	.LFE46:
 481              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 482              		.align	2
 483              	.LC7:
 484 0000 5372632F 		.ascii	"Src/main.c\000"
 484      6D61696E 
 484      2E6300
 485              		.global	__aeabi_uidiv
 486              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 16


 487              		.align	1
 488              		.global	SystemClock_Config
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 493              	SystemClock_Config:
 494              	.LFB45:
 232:Src/main.c    **** 
 495              		.loc 1 232 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 72
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 00B5     		push	{lr}
 500              	.LCFI3:
 501              		.cfi_def_cfa_offset 4
 502              		.cfi_offset 14, -4
 503 0002 93B0     		sub	sp, sp, #76
 504              	.LCFI4:
 505              		.cfi_def_cfa_offset 80
 234:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 506              		.loc 1 234 3 view .LVU125
 235:Src/main.c    **** 
 507              		.loc 1 235 3 view .LVU126
 239:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 508              		.loc 1 239 3 view .LVU127
 239:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 509              		.loc 1 239 36 is_stmt 0 view .LVU128
 510 0004 0223     		movs	r3, #2
 511 0006 0593     		str	r3, [sp, #20]
 240:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 512              		.loc 1 240 3 is_stmt 1 view .LVU129
 240:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 513              		.loc 1 240 30 is_stmt 0 view .LVU130
 514 0008 013B     		subs	r3, r3, #1
 515 000a 0893     		str	r3, [sp, #32]
 241:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 516              		.loc 1 241 3 is_stmt 1 view .LVU131
 241:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 517              		.loc 1 241 41 is_stmt 0 view .LVU132
 518 000c 0F33     		adds	r3, r3, #15
 519 000e 0993     		str	r3, [sp, #36]
 242:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 520              		.loc 1 242 3 is_stmt 1 view .LVU133
 242:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 521              		.loc 1 242 34 is_stmt 0 view .LVU134
 522 0010 0023     		movs	r3, #0
 523 0012 0E93     		str	r3, [sp, #56]
 243:Src/main.c    ****   {
 524              		.loc 1 243 3 is_stmt 1 view .LVU135
 243:Src/main.c    ****   {
 525              		.loc 1 243 7 is_stmt 0 view .LVU136
 526 0014 05A8     		add	r0, sp, #20
 527 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 528              	.LVL27:
 243:Src/main.c    ****   {
 529              		.loc 1 243 6 discriminator 1 view .LVU137
 530 001a 0028     		cmp	r0, #0
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 17


 531 001c 1ED1     		bne	.L50
 250:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 532              		.loc 1 250 3 is_stmt 1 view .LVU138
 250:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 533              		.loc 1 250 31 is_stmt 0 view .LVU139
 534 001e 0723     		movs	r3, #7
 535 0020 0193     		str	r3, [sp, #4]
 252:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 536              		.loc 1 252 3 is_stmt 1 view .LVU140
 252:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 537              		.loc 1 252 34 is_stmt 0 view .LVU141
 538 0022 0023     		movs	r3, #0
 539 0024 0293     		str	r3, [sp, #8]
 253:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 540              		.loc 1 253 3 is_stmt 1 view .LVU142
 253:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 541              		.loc 1 253 35 is_stmt 0 view .LVU143
 542 0026 0393     		str	r3, [sp, #12]
 254:Src/main.c    **** 
 543              		.loc 1 254 3 is_stmt 1 view .LVU144
 254:Src/main.c    **** 
 544              		.loc 1 254 36 is_stmt 0 view .LVU145
 545 0028 0493     		str	r3, [sp, #16]
 256:Src/main.c    ****   {
 546              		.loc 1 256 3 is_stmt 1 view .LVU146
 256:Src/main.c    ****   {
 547              		.loc 1 256 7 is_stmt 0 view .LVU147
 548 002a 0021     		movs	r1, #0
 549 002c 01A8     		add	r0, sp, #4
 550 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 551              	.LVL28:
 256:Src/main.c    ****   {
 552              		.loc 1 256 6 discriminator 1 view .LVU148
 553 0032 0028     		cmp	r0, #0
 554 0034 16D1     		bne	.L51
 263:Src/main.c    **** 
 555              		.loc 1 263 3 is_stmt 1 view .LVU149
 263:Src/main.c    **** 
 556              		.loc 1 263 22 is_stmt 0 view .LVU150
 557 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 558              	.LVL29:
 263:Src/main.c    **** 
 559              		.loc 1 263 3 discriminator 1 view .LVU151
 560 003a FA21     		movs	r1, #250
 561 003c 8900     		lsls	r1, r1, #2
 562 003e FFF7FEFF 		bl	__aeabi_uidiv
 563              	.LVL30:
 564 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 565              	.LVL31:
 267:Src/main.c    **** 
 566              		.loc 1 267 3 is_stmt 1 view .LVU152
 567 0046 0420     		movs	r0, #4
 568 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 569              	.LVL32:
 270:Src/main.c    **** }
 570              		.loc 1 270 3 view .LVU153
 571 004c 0120     		movs	r0, #1
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 18


 572 004e 0022     		movs	r2, #0
 573 0050 0021     		movs	r1, #0
 574 0052 4042     		rsbs	r0, r0, #0
 575 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 576              	.LVL33:
 271:Src/main.c    **** 
 577              		.loc 1 271 1 is_stmt 0 view .LVU154
 578 0058 13B0     		add	sp, sp, #76
 579              		@ sp needed
 580 005a 00BD     		pop	{pc}
 581              	.L50:
 245:Src/main.c    ****   }
 582              		.loc 1 245 5 is_stmt 1 view .LVU155
 583 005c 0448     		ldr	r0, .L52
 584 005e F521     		movs	r1, #245
 585 0060 FFF7FEFF 		bl	_Error_Handler
 586              	.LVL34:
 587              	.L51:
 258:Src/main.c    ****   }
 588              		.loc 1 258 5 view .LVU156
 589 0064 8121     		movs	r1, #129
 590 0066 0248     		ldr	r0, .L52
 591 0068 4900     		lsls	r1, r1, #1
 592 006a FFF7FEFF 		bl	_Error_Handler
 593              	.LVL35:
 594              	.L53:
 595 006e C046     		.align	2
 596              	.L52:
 597 0070 00000000 		.word	.LC7
 598              		.cfi_endproc
 599              	.LFE45:
 601              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 602              		.align	2
 603              	.LC10:
 604 0000 434D443F 		.ascii	"CMD?\012\000"
 604      0A00
 605              		.section	.text.main,"ax",%progbits
 606              		.align	1
 607              		.global	main
 608              		.syntax unified
 609              		.code	16
 610              		.thumb_func
 612              	main:
 613              	.LFB40:
  87:Src/main.c    **** 
 614              		.loc 1 87 1 view -0
 615              		.cfi_startproc
 616              		@ Volatile: function does not return.
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0000 10B5     		push	{r4, lr}
 620              	.LCFI5:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
  89:Src/main.c    ****   SystemClock_Config();
 624              		.loc 1 89 3 view .LVU158
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 19


 625 0002 FFF7FEFF 		bl	HAL_Init
 626              	.LVL36:
  90:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 627              		.loc 1 90 3 view .LVU159
 628 0006 FFF7FEFF 		bl	SystemClock_Config
 629              	.LVL37:
  91:Src/main.c    ****   //RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 630              		.loc 1 91 3 view .LVU160
  91:Src/main.c    ****   //RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 631              		.loc 1 91 6 is_stmt 0 view .LVU161
 632 000a 2D4B     		ldr	r3, .L56
 633 000c D969     		ldr	r1, [r3, #28]
  91:Src/main.c    ****   //RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 634              		.loc 1 91 16 view .LVU162
 635 000e 8022     		movs	r2, #128
 636 0010 D202     		lsls	r2, r2, #11
 637 0012 1143     		orrs	r1, r2
 638 0014 D961     		str	r1, [r3, #28]
  93:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 639              		.loc 1 93 3 is_stmt 1 view .LVU163
  93:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 640              		.loc 1 93 6 is_stmt 0 view .LVU164
 641 0016 5969     		ldr	r1, [r3, #20]
  93:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 642              		.loc 1 93 15 view .LVU165
 643 0018 0A43     		orrs	r2, r1
 644 001a 5A61     		str	r2, [r3, #20]
  94:Src/main.c    **** 
 645              		.loc 1 94 3 is_stmt 1 view .LVU166
  94:Src/main.c    **** 
 646              		.loc 1 94 6 is_stmt 0 view .LVU167
 647 001c 5969     		ldr	r1, [r3, #20]
  94:Src/main.c    **** 
 648              		.loc 1 94 15 view .LVU168
 649 001e 8022     		movs	r2, #128
 650 0020 1203     		lsls	r2, r2, #12
 651 0022 0A43     		orrs	r2, r1
 652 0024 5A61     		str	r2, [r3, #20]
  96:Src/main.c    ****   GPIOB->MODER |= (2 << (10 * 2)); // PB10 to alternate function 
 653              		.loc 1 96 3 is_stmt 1 view .LVU169
  96:Src/main.c    ****   GPIOB->MODER |= (2 << (10 * 2)); // PB10 to alternate function 
 654              		.loc 1 96 8 is_stmt 0 view .LVU170
 655 0026 274B     		ldr	r3, .L56+4
 656 0028 1A68     		ldr	r2, [r3]
  96:Src/main.c    ****   GPIOB->MODER |= (2 << (10 * 2)); // PB10 to alternate function 
 657              		.loc 1 96 16 view .LVU171
 658 002a 2749     		ldr	r1, .L56+8
 659 002c 0A40     		ands	r2, r1
 660 002e 1A60     		str	r2, [r3]
  97:Src/main.c    ****   GPIOB->MODER |= (2 << (11 * 2)); // PB11 to alternate function 
 661              		.loc 1 97 3 is_stmt 1 view .LVU172
  97:Src/main.c    ****   GPIOB->MODER |= (2 << (11 * 2)); // PB11 to alternate function 
 662              		.loc 1 97 8 is_stmt 0 view .LVU173
 663 0030 1968     		ldr	r1, [r3]
  97:Src/main.c    ****   GPIOB->MODER |= (2 << (11 * 2)); // PB11 to alternate function 
 664              		.loc 1 97 16 view .LVU174
 665 0032 8022     		movs	r2, #128
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 20


 666 0034 9203     		lsls	r2, r2, #14
 667 0036 0A43     		orrs	r2, r1
 668 0038 1A60     		str	r2, [r3]
  98:Src/main.c    ****   GPIOB->AFR[1] |= ((4 <<  8) | (4 <<  12)); // AFRH10 and AFRH11 to AF4
 669              		.loc 1 98 3 is_stmt 1 view .LVU175
  98:Src/main.c    ****   GPIOB->AFR[1] |= ((4 <<  8) | (4 <<  12)); // AFRH10 and AFRH11 to AF4
 670              		.loc 1 98 8 is_stmt 0 view .LVU176
 671 003a 1968     		ldr	r1, [r3]
  98:Src/main.c    ****   GPIOB->AFR[1] |= ((4 <<  8) | (4 <<  12)); // AFRH10 and AFRH11 to AF4
 672              		.loc 1 98 16 view .LVU177
 673 003c 8022     		movs	r2, #128
 674 003e 1204     		lsls	r2, r2, #16
 675 0040 0A43     		orrs	r2, r1
 676 0042 1A60     		str	r2, [r3]
  99:Src/main.c    **** 
 677              		.loc 1 99 3 is_stmt 1 view .LVU178
  99:Src/main.c    **** 
 678              		.loc 1 99 13 is_stmt 0 view .LVU179
 679 0044 596A     		ldr	r1, [r3, #36]
  99:Src/main.c    **** 
 680              		.loc 1 99 17 view .LVU180
 681 0046 8822     		movs	r2, #136
 682 0048 D201     		lsls	r2, r2, #7
 683 004a 0A43     		orrs	r2, r1
 684 004c 5A62     		str	r2, [r3, #36]
 102:Src/main.c    **** 
 685              		.loc 1 102 3 is_stmt 1 view .LVU181
 102:Src/main.c    **** 
 686              		.loc 1 102 17 is_stmt 0 view .LVU182
 687 004e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 688              	.LVL38:
 102:Src/main.c    **** 
 689              		.loc 1 102 39 discriminator 1 view .LVU183
 690 0052 E121     		movs	r1, #225
 691 0054 4902     		lsls	r1, r1, #9
 692 0056 FFF7FEFF 		bl	__aeabi_uidiv
 693              	.LVL39:
 102:Src/main.c    **** 
 694              		.loc 1 102 15 discriminator 1 view .LVU184
 695 005a 1C4B     		ldr	r3, .L56+12
 696 005c D860     		str	r0, [r3, #12]
 104:Src/main.c    ****   USART3->CR1 |= USART_CR1_RE; // Reciever enable
 697              		.loc 1 104 3 is_stmt 1 view .LVU185
 104:Src/main.c    ****   USART3->CR1 |= USART_CR1_RE; // Reciever enable
 698              		.loc 1 104 9 is_stmt 0 view .LVU186
 699 005e 1A68     		ldr	r2, [r3]
 104:Src/main.c    ****   USART3->CR1 |= USART_CR1_RE; // Reciever enable
 700              		.loc 1 104 15 view .LVU187
 701 0060 0821     		movs	r1, #8
 702 0062 0A43     		orrs	r2, r1
 703 0064 1A60     		str	r2, [r3]
 105:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE; // Enable USART
 704              		.loc 1 105 3 is_stmt 1 view .LVU188
 105:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE; // Enable USART
 705              		.loc 1 105 9 is_stmt 0 view .LVU189
 706 0066 1A68     		ldr	r2, [r3]
 105:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE; // Enable USART
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 21


 707              		.loc 1 105 15 view .LVU190
 708 0068 0439     		subs	r1, r1, #4
 709 006a 0A43     		orrs	r2, r1
 710 006c 1A60     		str	r2, [r3]
 106:Src/main.c    ****   //USART3->CR1 |= USART_CR1_RXNEIE; // 
 711              		.loc 1 106 3 is_stmt 1 view .LVU191
 106:Src/main.c    ****   //USART3->CR1 |= USART_CR1_RXNEIE; // 
 712              		.loc 1 106 9 is_stmt 0 view .LVU192
 713 006e 1A68     		ldr	r2, [r3]
 106:Src/main.c    ****   //USART3->CR1 |= USART_CR1_RXNEIE; // 
 714              		.loc 1 106 15 view .LVU193
 715 0070 0339     		subs	r1, r1, #3
 716 0072 0A43     		orrs	r2, r1
 717 0074 1A60     		str	r2, [r3]
 110:Src/main.c    ****   // set red green blue LED
 718              		.loc 1 110 3 is_stmt 1 view .LVU194
 110:Src/main.c    ****   // set red green blue LED
 719              		.loc 1 110 8 is_stmt 0 view .LVU195
 720 0076 164B     		ldr	r3, .L56+16
 721 0078 1A68     		ldr	r2, [r3]
 110:Src/main.c    ****   // set red green blue LED
 722              		.loc 1 110 16 view .LVU196
 723 007a 1649     		ldr	r1, .L56+20
 724 007c 0A40     		ands	r2, r1
 725 007e 1A60     		str	r2, [r3]
 112:Src/main.c    ****   GPIOC->OTYPER &= ~((1 << 6) | (1 << 7) | (1 << 9)); // clear and both push-pull type
 726              		.loc 1 112 3 is_stmt 1 view .LVU197
 112:Src/main.c    ****   GPIOC->OTYPER &= ~((1 << 6) | (1 << 7) | (1 << 9)); // clear and both push-pull type
 727              		.loc 1 112 8 is_stmt 0 view .LVU198
 728 0080 1968     		ldr	r1, [r3]
 112:Src/main.c    ****   GPIOC->OTYPER &= ~((1 << 6) | (1 << 7) | (1 << 9)); // clear and both push-pull type
 729              		.loc 1 112 16 view .LVU199
 730 0082 8A22     		movs	r2, #138
 731 0084 D202     		lsls	r2, r2, #11
 732 0086 0A43     		orrs	r2, r1
 733 0088 1A60     		str	r2, [r3]
 113:Src/main.c    ****   GPIOC->OSPEEDR &= ~((1 << (6 * 2)) | (1 << (7 * 2)) | (1 << (9 * 2))); // clear and both low spee
 734              		.loc 1 113 3 is_stmt 1 view .LVU200
 113:Src/main.c    ****   GPIOC->OSPEEDR &= ~((1 << (6 * 2)) | (1 << (7 * 2)) | (1 << (9 * 2))); // clear and both low spee
 735              		.loc 1 113 8 is_stmt 0 view .LVU201
 736 008a 5A68     		ldr	r2, [r3, #4]
 113:Src/main.c    ****   GPIOC->OSPEEDR &= ~((1 << (6 * 2)) | (1 << (7 * 2)) | (1 << (9 * 2))); // clear and both low spee
 737              		.loc 1 113 17 view .LVU202
 738 008c 1249     		ldr	r1, .L56+24
 739 008e 0A40     		ands	r2, r1
 740 0090 5A60     		str	r2, [r3, #4]
 114:Src/main.c    ****   GPIOC->PUPDR &= ~((3 << (6 * 2)) | (3 << (7 * 2)) | (3 << (9 * 2))); // clear and both no pull-up
 741              		.loc 1 114 3 is_stmt 1 view .LVU203
 114:Src/main.c    ****   GPIOC->PUPDR &= ~((3 << (6 * 2)) | (3 << (7 * 2)) | (3 << (9 * 2))); // clear and both no pull-up
 742              		.loc 1 114 8 is_stmt 0 view .LVU204
 743 0092 9A68     		ldr	r2, [r3, #8]
 114:Src/main.c    ****   GPIOC->PUPDR &= ~((3 << (6 * 2)) | (3 << (7 * 2)) | (3 << (9 * 2))); // clear and both no pull-up
 744              		.loc 1 114 18 view .LVU205
 745 0094 1149     		ldr	r1, .L56+28
 746 0096 0A40     		ands	r2, r1
 747 0098 9A60     		str	r2, [r3, #8]
 115:Src/main.c    **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 22


 748              		.loc 1 115 3 is_stmt 1 view .LVU206
 115:Src/main.c    **** 
 749              		.loc 1 115 8 is_stmt 0 view .LVU207
 750 009a DA68     		ldr	r2, [r3, #12]
 115:Src/main.c    **** 
 751              		.loc 1 115 16 view .LVU208
 752 009c 1049     		ldr	r1, .L56+32
 753 009e 0A40     		ands	r2, r1
 754 00a0 DA60     		str	r2, [r3, #12]
 140:Src/main.c    ****    dataFlag = 0;
 755              		.loc 1 140 5 is_stmt 1 view .LVU209
 756              	.LVL40:
 757              	.LBB4:
 758              	.LBI4:
 759              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 23


  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 24


 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 25


 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 26


 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 27


 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 28


 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 29


 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 30


 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 31


 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 32


 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 33


 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 760              		.loc 2 623 22 view .LVU210
 761              	.LBB5:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 762              		.loc 2 625 3 view .LVU211
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 763              		.loc 2 627 5 view .LVU212
 764              		.loc 2 627 20 is_stmt 0 view .LVU213
 765 00a2 104B     		ldr	r3, .L56+36
 766 00a4 8022     		movs	r2, #128
 767 00a6 9205     		lsls	r2, r2, #22
 768 00a8 1A60     		str	r2, [r3]
 769              	.LVL41:
 770              		.loc 2 627 20 view .LVU214
 771              	.LBE5:
 772              	.LBE4:
 141:Src/main.c    ****    while(1){
 773              		.loc 1 141 4 is_stmt 1 view .LVU215
 141:Src/main.c    ****    while(1){
 774              		.loc 1 141 13 is_stmt 0 view .LVU216
 775 00aa 0F4B     		ldr	r3, .L56+40
 776 00ac 0022     		movs	r2, #0
 777 00ae 1A60     		str	r2, [r3]
 778              	.L55:
 142:Src/main.c    **** 
 779              		.loc 1 142 4 is_stmt 1 view .LVU217
 144:Src/main.c    ****     HAL_Delay(1000);
 780              		.loc 1 144 5 view .LVU218
 781 00b0 0E48     		ldr	r0, .L56+44
 782 00b2 FFF7FEFF 		bl	Transmit_USART
 783              	.LVL42:
 145:Src/main.c    **** 
 784              		.loc 1 145 5 discriminator 1 view .LVU219
 785 00b6 FA20     		movs	r0, #250
 786 00b8 8000     		lsls	r0, r0, #2
 787 00ba FFF7FEFF 		bl	HAL_Delay
 788              	.LVL43:
 142:Src/main.c    **** 
 789              		.loc 1 142 9 view .LVU220
 790 00be F7E7     		b	.L55
 791              	.L57:
 792              		.align	2
 793              	.L56:
 794 00c0 00100240 		.word	1073876992
 795 00c4 00040048 		.word	1207960576
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 34


 796 00c8 FFFF0FFF 		.word	-15728641
 797 00cc 00480040 		.word	1073760256
 798 00d0 00080048 		.word	1207961600
 799 00d4 FFFFC0FF 		.word	-4128769
 800 00d8 3FFDFFFF 		.word	-705
 801 00dc FFAFFBFF 		.word	-282625
 802 00e0 FF0FF3FF 		.word	-847873
 803 00e4 00E100E0 		.word	-536813312
 804 00e8 00000000 		.word	dataFlag
 805 00ec 00000000 		.word	.LC10
 806              		.cfi_endproc
 807              	.LFE40:
 809              		.global	dataFlag
 810              		.section	.bss.dataFlag,"aw",%nobits
 811              		.align	2
 814              	dataFlag:
 815 0000 00000000 		.space	4
 816              		.global	receivedNum
 817              		.section	.bss.receivedNum,"aw",%nobits
 820              	receivedNum:
 821 0000 00       		.space	1
 822              		.global	receivedData
 823              		.section	.bss.receivedData,"aw",%nobits
 826              	receivedData:
 827 0000 00       		.space	1
 828              		.text
 829              	.Letext0:
 830              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 831              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 832              		.file 5 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 833              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 834              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 835              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 836              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:19     .text.Transmit_USART:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:25     .text.Transmit_USART:00000000 Transmit_USART
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:81     .text.Transmit_USART:00000024 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:86     .rodata.LED_Toggle.str1.4:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:90     .text.LED_Toggle:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:96     .text.LED_Toggle:00000000 LED_Toggle
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:169    .text.LED_Toggle:00000040 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:175    .rodata.Control_LED.str1.4:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:179    .text.Control_LED:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:185    .text.Control_LED:00000000 Control_LED
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:376    .text.Control_LED:000000bc $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:382    .text.USART3_4_IRQHandler:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:388    .text.USART3_4_IRQHandler:00000000 USART3_4_IRQHandler
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:450    .text.USART3_4_IRQHandler:00000038 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:814    .bss.dataFlag:00000000 dataFlag
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:826    .bss.receivedData:00000000 receivedData
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:820    .bss.receivedNum:00000000 receivedNum
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:458    .text._Error_Handler:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:464    .text._Error_Handler:00000000 _Error_Handler
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:482    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:487    .text.SystemClock_Config:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:493    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:597    .text.SystemClock_Config:00000070 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:602    .rodata.main.str1.4:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:606    .text.main:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:612    .text.main:00000000 main
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:794    .text.main:000000c0 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:811    .bss.dataFlag:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:821    .bss.receivedNum:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccVtvbOs.s:827    .bss.receivedData:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_Delay
