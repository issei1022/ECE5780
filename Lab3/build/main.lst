ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.main,"ax",%progbits
  19              		.align	1
  20              		.global	main
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	main:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Brandon Mouser
   4:Src/main.c    ****   * U0962682
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  73:Src/main.c    **** 
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
  38              		.loc 1 74 3 view .LVU1
  39              		.loc 1 74 6 is_stmt 0 view .LVU2
  40 0002 4249     		ldr	r1, .L2
  41 0004 CB69     		ldr	r3, [r1, #28]
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 3


  42              		.loc 1 74 16 view .LVU3
  43 0006 0120     		movs	r0, #1
  44 0008 0343     		orrs	r3, r0
  45 000a CB61     		str	r3, [r1, #28]
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  46              		.loc 1 75 3 is_stmt 1 view .LVU4
  47              		.loc 1 75 6 is_stmt 0 view .LVU5
  48 000c 4A69     		ldr	r2, [r1, #20]
  49              		.loc 1 75 15 view .LVU6
  50 000e 8023     		movs	r3, #128
  51 0010 9B02     		lsls	r3, r3, #10
  52 0012 1343     		orrs	r3, r2
  53 0014 4B61     		str	r3, [r1, #20]
  76:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  54              		.loc 1 76 3 is_stmt 1 view .LVU7
  55              		.loc 1 76 6 is_stmt 0 view .LVU8
  56 0016 4B69     		ldr	r3, [r1, #20]
  57              		.loc 1 76 15 view .LVU9
  58 0018 8024     		movs	r4, #128
  59 001a 2403     		lsls	r4, r4, #12
  60 001c 2343     		orrs	r3, r4
  61 001e 4B61     		str	r3, [r1, #20]
  77:Src/main.c    **** 
  78:Src/main.c    ****   GPIOC->MODER &= ~((3 << (8 * 2)) | (3 << (9 * 2))); // clear
  62              		.loc 1 78 3 is_stmt 1 view .LVU10
  63              		.loc 1 78 8 is_stmt 0 view .LVU11
  64 0020 3B4A     		ldr	r2, .L2+4
  65 0022 1368     		ldr	r3, [r2]
  66              		.loc 1 78 16 view .LVU12
  67 0024 3B4D     		ldr	r5, .L2+8
  68 0026 2B40     		ands	r3, r5
  69 0028 1360     		str	r3, [r2]
  79:Src/main.c    ****   GPIOC->MODER |= (1 << (8 * 2)); // PC8
  70              		.loc 1 79 3 is_stmt 1 view .LVU13
  71              		.loc 1 79 8 is_stmt 0 view .LVU14
  72 002a 1668     		ldr	r6, [r2]
  73              		.loc 1 79 16 view .LVU15
  74 002c 8023     		movs	r3, #128
  75 002e 5B02     		lsls	r3, r3, #9
  76 0030 3343     		orrs	r3, r6
  77 0032 1360     		str	r3, [r2]
  80:Src/main.c    ****   GPIOC->MODER |= (1 << (9 * 2)); // PC9
  78              		.loc 1 80 3 is_stmt 1 view .LVU16
  79              		.loc 1 80 8 is_stmt 0 view .LVU17
  80 0034 1668     		ldr	r6, [r2]
  81              		.loc 1 80 16 view .LVU18
  82 0036 8023     		movs	r3, #128
  83 0038 DB02     		lsls	r3, r3, #11
  84 003a 3343     		orrs	r3, r6
  85 003c 1360     		str	r3, [r2]
  81:Src/main.c    ****   GPIOC->OTYPER &= ~((1 << 8) | (1 << 9)); // clear and both push-pull type
  86              		.loc 1 81 3 is_stmt 1 view .LVU19
  87              		.loc 1 81 8 is_stmt 0 view .LVU20
  88 003e 5368     		ldr	r3, [r2, #4]
  89              		.loc 1 81 17 view .LVU21
  90 0040 354E     		ldr	r6, .L2+12
  91 0042 3340     		ands	r3, r6
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 4


  92 0044 5360     		str	r3, [r2, #4]
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~((1 << (8 * 2)) | (1 << (9 * 2))); // clear and both low speed type
  93              		.loc 1 82 3 is_stmt 1 view .LVU22
  94              		.loc 1 82 8 is_stmt 0 view .LVU23
  95 0046 9368     		ldr	r3, [r2, #8]
  96              		.loc 1 82 18 view .LVU24
  97 0048 344E     		ldr	r6, .L2+16
  98 004a 3340     		ands	r3, r6
  99 004c 9360     		str	r3, [r2, #8]
  83:Src/main.c    ****   GPIOC->PUPDR &= ~((3 << (8 * 2)) | (3 << (9 * 2))); // clear and both no pull-up down
 100              		.loc 1 83 3 is_stmt 1 view .LVU25
 101              		.loc 1 83 8 is_stmt 0 view .LVU26
 102 004e D368     		ldr	r3, [r2, #12]
 103              		.loc 1 83 16 view .LVU27
 104 0050 2B40     		ands	r3, r5
 105 0052 D360     		str	r3, [r2, #12]
  84:Src/main.c    **** 
  85:Src/main.c    **** 
  86:Src/main.c    ****   //uint32_t T_target = 8000;
  87:Src/main.c    ****   //uint8_t F_target = 4;
  88:Src/main.c    **** 
  89:Src/main.c    ****   uint32_t psc = 7999;
 106              		.loc 1 89 3 is_stmt 1 view .LVU28
 107              	.LVL0:
  90:Src/main.c    ****   uint32_t arr = 250;
 108              		.loc 1 90 3 view .LVU29
  91:Src/main.c    **** 
  92:Src/main.c    ****   TIM2->PSC = psc;  
 109              		.loc 1 92 3 view .LVU30
 110              		.loc 1 92 13 is_stmt 0 view .LVU31
 111 0054 8023     		movs	r3, #128
 112 0056 DB05     		lsls	r3, r3, #23
 113 0058 314D     		ldr	r5, .L2+20
 114 005a 9D62     		str	r5, [r3, #40]
  93:Src/main.c    ****   TIM2->ARR = arr;
 115              		.loc 1 93 3 is_stmt 1 view .LVU32
 116              		.loc 1 93 13 is_stmt 0 view .LVU33
 117 005c FA25     		movs	r5, #250
 118 005e DD62     		str	r5, [r3, #44]
  94:Src/main.c    ****   TIM2->EGR = TIM_EGR_UG; 
 119              		.loc 1 94 3 is_stmt 1 view .LVU34
 120              		.loc 1 94 13 is_stmt 0 view .LVU35
 121 0060 5861     		str	r0, [r3, #20]
  95:Src/main.c    ****   TIM2->DIER |= TIM_DIER_UIE; //TIM_DIER_UIE enable update interapt
 122              		.loc 1 95 3 is_stmt 1 view .LVU36
 123              		.loc 1 95 7 is_stmt 0 view .LVU37
 124 0062 DD68     		ldr	r5, [r3, #12]
 125              		.loc 1 95 14 view .LVU38
 126 0064 0543     		orrs	r5, r0
 127 0066 DD60     		str	r5, [r3, #12]
  96:Src/main.c    ****   // enable timer
  97:Src/main.c    ****   TIM2->CR1 |= TIM_CR1_CEN;
 128              		.loc 1 97 3 is_stmt 1 view .LVU39
 129              		.loc 1 97 7 is_stmt 0 view .LVU40
 130 0068 1D68     		ldr	r5, [r3]
 131              		.loc 1 97 13 view .LVU41
 132 006a 0543     		orrs	r5, r0
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 5


 133 006c 1D60     		str	r5, [r3]
  98:Src/main.c    **** 
  99:Src/main.c    ****   // // PC9 to high green
 100:Src/main.c    ****   GPIOC->BSRR |= (1 << 9);
 134              		.loc 1 100 3 is_stmt 1 view .LVU42
 135              		.loc 1 100 8 is_stmt 0 view .LVU43
 136 006e 9569     		ldr	r5, [r2, #24]
 137              		.loc 1 100 15 view .LVU44
 138 0070 8023     		movs	r3, #128
 139 0072 9B00     		lsls	r3, r3, #2
 140 0074 2B43     		orrs	r3, r5
 141 0076 9361     		str	r3, [r2, #24]
 101:Src/main.c    **** 
 102:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 142              		.loc 1 102 3 is_stmt 1 view .LVU45
 143              	.LVL1:
 144              	.LBB4:
 145              	.LBI4:
 146              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 6


  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 7


  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 8


 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 9


 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 10


 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 11


 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 12


 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 13


 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 14


 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 15


 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 16


 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 147              		.loc 2 623 22 view .LVU46
 148              	.LBB5:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 149              		.loc 2 625 3 view .LVU47
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 150              		.loc 2 627 5 view .LVU48
 151              		.loc 2 627 20 is_stmt 0 view .LVU49
 152 0078 2A4B     		ldr	r3, .L2+24
 153 007a 8025     		movs	r5, #128
 154 007c 2D02     		lsls	r5, r5, #8
 155 007e 1D60     		str	r5, [r3]
 156              	.LVL2:
 157              		.loc 2 627 20 view .LVU50
 158              	.LBE5:
 159              	.LBE4:
 103:Src/main.c    **** 
 104:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 160              		.loc 1 104 3 is_stmt 1 view .LVU51
 161              		.loc 1 104 6 is_stmt 0 view .LVU52
 162 0080 CB69     		ldr	r3, [r1, #28]
 163              		.loc 1 104 16 view .LVU53
 164 0082 0225     		movs	r5, #2
 165 0084 2B43     		orrs	r3, r5
 166 0086 CB61     		str	r3, [r1, #28]
 105:Src/main.c    **** 
 106:Src/main.c    ****   uint32_t psc_tim3 = 39; // prescaler
 167              		.loc 1 106 3 is_stmt 1 view .LVU54
 168              	.LVL3:
 107:Src/main.c    ****   uint32_t arr_tim3 = 125; // auto reload register
 169              		.loc 1 107 3 view .LVU55
 108:Src/main.c    **** 
 109:Src/main.c    ****   // channel 1
 110:Src/main.c    ****   TIM3->CCMR1 &= ~(TIM_CCMR1_OC1M);
 170              		.loc 1 110 3 view .LVU56
 171              		.loc 1 110 7 is_stmt 0 view .LVU57
 172 0088 274B     		ldr	r3, .L2+28
 173 008a 9D69     		ldr	r5, [r3, #24]
 174              		.loc 1 110 15 view .LVU58
 175 008c 7026     		movs	r6, #112
 176 008e B543     		bics	r5, r6
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 17


 177 0090 9D61     		str	r5, [r3, #24]
 111:Src/main.c    ****   TIM3->CCMR1 |= TIM_CCMR1_OC1PE; 
 178              		.loc 1 111 3 is_stmt 1 view .LVU59
 179              		.loc 1 111 7 is_stmt 0 view .LVU60
 180 0092 9D69     		ldr	r5, [r3, #24]
 181              		.loc 1 111 15 view .LVU61
 182 0094 683E     		subs	r6, r6, #104
 183 0096 3543     		orrs	r5, r6
 184 0098 9D61     		str	r5, [r3, #24]
 112:Src/main.c    ****  
 113:Src/main.c    ****   // channel 2
 114:Src/main.c    ****   TIM3->CCMR1 &= ~(TIM_CCMR1_OC2M);
 185              		.loc 1 114 3 is_stmt 1 view .LVU62
 186              		.loc 1 114 7 is_stmt 0 view .LVU63
 187 009a 9D69     		ldr	r5, [r3, #24]
 188              		.loc 1 114 15 view .LVU64
 189 009c 234E     		ldr	r6, .L2+32
 190 009e 3540     		ands	r5, r6
 191 00a0 9D61     		str	r5, [r3, #24]
 115:Src/main.c    ****   TIM3->CCMR1 |= TIM_CCMR1_OC2PE;
 192              		.loc 1 115 3 is_stmt 1 view .LVU65
 193              		.loc 1 115 7 is_stmt 0 view .LVU66
 194 00a2 9E69     		ldr	r6, [r3, #24]
 195              		.loc 1 115 15 view .LVU67
 196 00a4 8025     		movs	r5, #128
 197 00a6 2D01     		lsls	r5, r5, #4
 198 00a8 3543     		orrs	r5, r6
 199 00aa 9D61     		str	r5, [r3, #24]
 116:Src/main.c    **** 
 117:Src/main.c    ****   TIM3->CCMR1 |= (0x06 << 4);  // OC1M[2:0] = 110 PWM mode 2
 200              		.loc 1 117 3 is_stmt 1 view .LVU68
 201              		.loc 1 117 7 is_stmt 0 view .LVU69
 202 00ac 9D69     		ldr	r5, [r3, #24]
 203              		.loc 1 117 15 view .LVU70
 204 00ae 6026     		movs	r6, #96
 205 00b0 3543     		orrs	r5, r6
 206 00b2 9D61     		str	r5, [r3, #24]
 118:Src/main.c    ****   TIM3->CCMR1 |= (0x06 << 12); // OC2M[2:0] = 110 PWM mode 2
 207              		.loc 1 118 3 is_stmt 1 view .LVU71
 208              		.loc 1 118 7 is_stmt 0 view .LVU72
 209 00b4 9E69     		ldr	r6, [r3, #24]
 210              		.loc 1 118 15 view .LVU73
 211 00b6 C025     		movs	r5, #192
 212 00b8 ED01     		lsls	r5, r5, #7
 213 00ba 3543     		orrs	r5, r6
 214 00bc 9D61     		str	r5, [r3, #24]
 119:Src/main.c    **** 
 120:Src/main.c    ****   // preload
 121:Src/main.c    ****   TIM3->CCMR1 |= TIM_CCMR1_OC1PE | TIM_CCMR1_OC2PE;
 215              		.loc 1 121 3 is_stmt 1 view .LVU74
 216              		.loc 1 121 7 is_stmt 0 view .LVU75
 217 00be 9E69     		ldr	r6, [r3, #24]
 218              		.loc 1 121 15 view .LVU76
 219 00c0 1B4D     		ldr	r5, .L2+36
 220 00c2 3543     		orrs	r5, r6
 221 00c4 9D61     		str	r5, [r3, #24]
 122:Src/main.c    ****   //porarity
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 18


 123:Src/main.c    ****   TIM3->CCER &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
 222              		.loc 1 123 3 is_stmt 1 view .LVU77
 223              		.loc 1 123 7 is_stmt 0 view .LVU78
 224 00c6 1D6A     		ldr	r5, [r3, #32]
 225              		.loc 1 123 14 view .LVU79
 226 00c8 2226     		movs	r6, #34
 227 00ca B543     		bics	r5, r6
 228 00cc 1D62     		str	r5, [r3, #32]
 124:Src/main.c    **** 
 125:Src/main.c    ****   // channel 1 and 2 as out
 126:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC1E; // channel 1 enabled
 229              		.loc 1 126 3 is_stmt 1 view .LVU80
 230              		.loc 1 126 7 is_stmt 0 view .LVU81
 231 00ce 1D6A     		ldr	r5, [r3, #32]
 232              		.loc 1 126 14 view .LVU82
 233 00d0 0543     		orrs	r5, r0
 234 00d2 1D62     		str	r5, [r3, #32]
 127:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC2E; // channel 2 enabled
 235              		.loc 1 127 3 is_stmt 1 view .LVU83
 236              		.loc 1 127 7 is_stmt 0 view .LVU84
 237 00d4 1D6A     		ldr	r5, [r3, #32]
 238              		.loc 1 127 14 view .LVU85
 239 00d6 123E     		subs	r6, r6, #18
 240 00d8 3543     		orrs	r5, r6
 241 00da 1D62     		str	r5, [r3, #32]
 128:Src/main.c    **** 
 129:Src/main.c    ****   // 800 Hz
 130:Src/main.c    ****   TIM3->PSC = psc_tim3;
 242              		.loc 1 130 3 is_stmt 1 view .LVU86
 243              		.loc 1 130 13 is_stmt 0 view .LVU87
 244 00dc 2725     		movs	r5, #39
 245 00de 9D62     		str	r5, [r3, #40]
 131:Src/main.c    ****   TIM3->ARR = arr_tim3;
 246              		.loc 1 131 3 is_stmt 1 view .LVU88
 247              		.loc 1 131 13 is_stmt 0 view .LVU89
 248 00e0 5635     		adds	r5, r5, #86
 249 00e2 DD62     		str	r5, [r3, #44]
 132:Src/main.c    **** 
 133:Src/main.c    ****   // set CCR to 20% of AER
 134:Src/main.c    ****   TIM3->CCR1 = arr_tim3 / 5;
 250              		.loc 1 134 3 is_stmt 1 view .LVU90
 251              		.loc 1 134 14 is_stmt 0 view .LVU91
 252 00e4 643D     		subs	r5, r5, #100
 253 00e6 5D63     		str	r5, [r3, #52]
 135:Src/main.c    ****   TIM3->CCR2 = arr_tim3 / 5;
 254              		.loc 1 135 3 is_stmt 1 view .LVU92
 255              		.loc 1 135 14 is_stmt 0 view .LVU93
 256 00e8 9D63     		str	r5, [r3, #56]
 136:Src/main.c    **** 
 137:Src/main.c    ****   //enable counter of taimer
 138:Src/main.c    ****   TIM3->CR1 |= TIM_CR1_CEN;
 257              		.loc 1 138 3 is_stmt 1 view .LVU94
 258              		.loc 1 138 7 is_stmt 0 view .LVU95
 259 00ea 1D68     		ldr	r5, [r3]
 260              		.loc 1 138 13 view .LVU96
 261 00ec 2843     		orrs	r0, r5
 262 00ee 1860     		str	r0, [r3]
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 19


 139:Src/main.c    **** 
 140:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 263              		.loc 1 140 3 is_stmt 1 view .LVU97
 264              		.loc 1 140 6 is_stmt 0 view .LVU98
 265 00f0 4B69     		ldr	r3, [r1, #20]
 266              		.loc 1 140 15 view .LVU99
 267 00f2 1C43     		orrs	r4, r3
 268 00f4 4C61     		str	r4, [r1, #20]
 141:Src/main.c    **** 
 142:Src/main.c    ****   GPIOC->MODER &= ~((3 << (6 * 2)) | (3 << (7 * 2))); 
 269              		.loc 1 142 3 is_stmt 1 view .LVU100
 270              		.loc 1 142 8 is_stmt 0 view .LVU101
 271 00f6 1368     		ldr	r3, [r2]
 272              		.loc 1 142 16 view .LVU102
 273 00f8 0E49     		ldr	r1, .L2+40
 274 00fa 0B40     		ands	r3, r1
 275 00fc 1360     		str	r3, [r2]
 143:Src/main.c    ****   GPIOC->MODER |= (2 << (6 * 2)) | (2 << (7 * 2)); 
 276              		.loc 1 143 3 is_stmt 1 view .LVU103
 277              		.loc 1 143 8 is_stmt 0 view .LVU104
 278 00fe 1168     		ldr	r1, [r2]
 279              		.loc 1 143 16 view .LVU105
 280 0100 A023     		movs	r3, #160
 281 0102 1B02     		lsls	r3, r3, #8
 282 0104 0B43     		orrs	r3, r1
 283 0106 1360     		str	r3, [r2]
 144:Src/main.c    **** 
 145:Src/main.c    ****   //GPIOC->AFR[0] |= (1 << (6 * 4)) | (1 << (7 * 4));
 146:Src/main.c    ****  // GPIOC->AFR[0] &= ~((0xF << (6 * 4)) | (0xF << (7 * 4)));
 147:Src/main.c    ****  // GPIOC->AFR[0] |= (1 << (6 * 4)) | (1 << (7 * 4));
 148:Src/main.c    **** 
 149:Src/main.c    ****  // TIM3->EGR |= TIM_EGR_UG;
 150:Src/main.c    **** 
 151:Src/main.c    **** }
 284              		.loc 1 151 1 view .LVU106
 285 0108 0020     		movs	r0, #0
 286              		@ sp needed
 287 010a 70BD     		pop	{r4, r5, r6, pc}
 288              	.L3:
 289              		.align	2
 290              	.L2:
 291 010c 00100240 		.word	1073876992
 292 0110 00080048 		.word	1207961600
 293 0114 FFFFF0FF 		.word	-983041
 294 0118 FFFCFFFF 		.word	-769
 295 011c FFFFFAFF 		.word	-327681
 296 0120 3F1F0000 		.word	7999
 297 0124 00E100E0 		.word	-536813312
 298 0128 00040040 		.word	1073742848
 299 012c FF8FFFFF 		.word	-28673
 300 0130 08080000 		.word	2056
 301 0134 FF0FFFFF 		.word	-61441
 302              		.cfi_endproc
 303              	.LFE40:
 305              		.section	.text._Error_Handler,"ax",%progbits
 306              		.align	1
 307              		.global	_Error_Handler
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 20


 308              		.syntax unified
 309              		.code	16
 310              		.thumb_func
 312              	_Error_Handler:
 313              	.LFB42:
 152:Src/main.c    **** 
 153:Src/main.c    **** /** System Clock Configuration
 154:Src/main.c    **** */
 155:Src/main.c    **** void SystemClock_Config(void)
 156:Src/main.c    **** {
 157:Src/main.c    **** 
 158:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 160:Src/main.c    **** 
 161:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 162:Src/main.c    ****     */
 163:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 164:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 167:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 170:Src/main.c    ****   }
 171:Src/main.c    **** 
 172:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 173:Src/main.c    ****     */
 174:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 175:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 176:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 177:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 181:Src/main.c    ****   {
 182:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 183:Src/main.c    ****   }
 184:Src/main.c    **** 
 185:Src/main.c    ****     /**Configure the Systick interrupt time
 186:Src/main.c    ****     */
 187:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 188:Src/main.c    **** 
 189:Src/main.c    ****     /**Configure the Systick
 190:Src/main.c    ****     */
 191:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 194:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 195:Src/main.c    **** }
 196:Src/main.c    **** 
 197:Src/main.c    **** /* USER CODE BEGIN 4 */
 198:Src/main.c    **** 
 199:Src/main.c    **** /* USER CODE END 4 */
 200:Src/main.c    **** 
 201:Src/main.c    **** /**
 202:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 203:Src/main.c    ****   * @param  None
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 21


 204:Src/main.c    ****   * @retval None
 205:Src/main.c    ****   */
 206:Src/main.c    **** void _Error_Handler(char * file, int line)
 207:Src/main.c    **** {
 314              		.loc 1 207 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ Volatile: function does not return.
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LVL4:
 321              	.L5:
 208:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 209:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 210:Src/main.c    ****   while(1)
 322              		.loc 1 210 3 view .LVU108
 211:Src/main.c    ****   {
 212:Src/main.c    ****   }
 323              		.loc 1 212 3 view .LVU109
 210:Src/main.c    ****   {
 324              		.loc 1 210 8 view .LVU110
 325 0000 FEE7     		b	.L5
 326              		.cfi_endproc
 327              	.LFE42:
 329              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 330              		.align	2
 331              	.LC0:
 332 0000 5372632F 		.ascii	"Src/main.c\000"
 332      6D61696E 
 332      2E6300
 333              		.global	__aeabi_uidiv
 334              		.section	.text.SystemClock_Config,"ax",%progbits
 335              		.align	1
 336              		.global	SystemClock_Config
 337              		.syntax unified
 338              		.code	16
 339              		.thumb_func
 341              	SystemClock_Config:
 342              	.LFB41:
 156:Src/main.c    **** 
 343              		.loc 1 156 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 72
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 00B5     		push	{lr}
 348              	.LCFI1:
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 14, -4
 351 0002 93B0     		sub	sp, sp, #76
 352              	.LCFI2:
 353              		.cfi_def_cfa_offset 80
 158:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 354              		.loc 1 158 3 view .LVU112
 159:Src/main.c    **** 
 355              		.loc 1 159 3 view .LVU113
 163:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 356              		.loc 1 163 3 view .LVU114
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 22


 163:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 357              		.loc 1 163 36 is_stmt 0 view .LVU115
 358 0004 0223     		movs	r3, #2
 359 0006 0593     		str	r3, [sp, #20]
 164:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 360              		.loc 1 164 3 is_stmt 1 view .LVU116
 164:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 361              		.loc 1 164 30 is_stmt 0 view .LVU117
 362 0008 013B     		subs	r3, r3, #1
 363 000a 0893     		str	r3, [sp, #32]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 364              		.loc 1 165 3 is_stmt 1 view .LVU118
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 365              		.loc 1 165 41 is_stmt 0 view .LVU119
 366 000c 0F33     		adds	r3, r3, #15
 367 000e 0993     		str	r3, [sp, #36]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 368              		.loc 1 166 3 is_stmt 1 view .LVU120
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 369              		.loc 1 166 34 is_stmt 0 view .LVU121
 370 0010 0023     		movs	r3, #0
 371 0012 0E93     		str	r3, [sp, #56]
 167:Src/main.c    ****   {
 372              		.loc 1 167 3 is_stmt 1 view .LVU122
 167:Src/main.c    ****   {
 373              		.loc 1 167 7 is_stmt 0 view .LVU123
 374 0014 05A8     		add	r0, sp, #20
 375 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 376              	.LVL5:
 167:Src/main.c    ****   {
 377              		.loc 1 167 6 discriminator 1 view .LVU124
 378 001a 0028     		cmp	r0, #0
 379 001c 1ED1     		bne	.L9
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 380              		.loc 1 174 3 is_stmt 1 view .LVU125
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 381              		.loc 1 174 31 is_stmt 0 view .LVU126
 382 001e 0723     		movs	r3, #7
 383 0020 0193     		str	r3, [sp, #4]
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 384              		.loc 1 176 3 is_stmt 1 view .LVU127
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 385              		.loc 1 176 34 is_stmt 0 view .LVU128
 386 0022 0023     		movs	r3, #0
 387 0024 0293     		str	r3, [sp, #8]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 388              		.loc 1 177 3 is_stmt 1 view .LVU129
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 389              		.loc 1 177 35 is_stmt 0 view .LVU130
 390 0026 0393     		str	r3, [sp, #12]
 178:Src/main.c    **** 
 391              		.loc 1 178 3 is_stmt 1 view .LVU131
 178:Src/main.c    **** 
 392              		.loc 1 178 36 is_stmt 0 view .LVU132
 393 0028 0493     		str	r3, [sp, #16]
 180:Src/main.c    ****   {
 394              		.loc 1 180 3 is_stmt 1 view .LVU133
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 23


 180:Src/main.c    ****   {
 395              		.loc 1 180 7 is_stmt 0 view .LVU134
 396 002a 0021     		movs	r1, #0
 397 002c 01A8     		add	r0, sp, #4
 398 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 399              	.LVL6:
 180:Src/main.c    ****   {
 400              		.loc 1 180 6 discriminator 1 view .LVU135
 401 0032 0028     		cmp	r0, #0
 402 0034 16D1     		bne	.L10
 187:Src/main.c    **** 
 403              		.loc 1 187 3 is_stmt 1 view .LVU136
 187:Src/main.c    **** 
 404              		.loc 1 187 22 is_stmt 0 view .LVU137
 405 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 406              	.LVL7:
 187:Src/main.c    **** 
 407              		.loc 1 187 3 discriminator 1 view .LVU138
 408 003a FA21     		movs	r1, #250
 409 003c 8900     		lsls	r1, r1, #2
 410 003e FFF7FEFF 		bl	__aeabi_uidiv
 411              	.LVL8:
 412 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 413              	.LVL9:
 191:Src/main.c    **** 
 414              		.loc 1 191 3 is_stmt 1 view .LVU139
 415 0046 0420     		movs	r0, #4
 416 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 417              	.LVL10:
 194:Src/main.c    **** }
 418              		.loc 1 194 3 view .LVU140
 419 004c 0120     		movs	r0, #1
 420 004e 0022     		movs	r2, #0
 421 0050 0021     		movs	r1, #0
 422 0052 4042     		rsbs	r0, r0, #0
 423 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 424              	.LVL11:
 195:Src/main.c    **** 
 425              		.loc 1 195 1 is_stmt 0 view .LVU141
 426 0058 13B0     		add	sp, sp, #76
 427              		@ sp needed
 428 005a 00BD     		pop	{pc}
 429              	.L9:
 169:Src/main.c    ****   }
 430              		.loc 1 169 5 is_stmt 1 view .LVU142
 431 005c 0348     		ldr	r0, .L11
 432 005e A921     		movs	r1, #169
 433 0060 FFF7FEFF 		bl	_Error_Handler
 434              	.LVL12:
 435              	.L10:
 182:Src/main.c    ****   }
 436              		.loc 1 182 5 view .LVU143
 437 0064 0148     		ldr	r0, .L11
 438 0066 B621     		movs	r1, #182
 439 0068 FFF7FEFF 		bl	_Error_Handler
 440              	.LVL13:
 441              	.L12:
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 24


 442              		.align	2
 443              	.L11:
 444 006c 00000000 		.word	.LC0
 445              		.cfi_endproc
 446              	.LFE41:
 448              		.text
 449              	.Letext0:
 450              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 451              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 452              		.file 5 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 453              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 454              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 455              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:19     .text.main:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:25     .text.main:00000000 main
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:291    .text.main:0000010c $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:306    .text._Error_Handler:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:312    .text._Error_Handler:00000000 _Error_Handler
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:330    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:335    .text.SystemClock_Config:00000000 $t
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:341    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/zd/d6dt4dr905z_mvnxcmn6y_dc0000gn/T//ccYu251B.s:444    .text.SystemClock_Config:0000006c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
